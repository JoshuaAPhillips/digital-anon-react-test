{"ast":null,"code":"var _jsxFileName = \"/Users/joshua/Documents/digital-anon-react-test/frontend/src/components/transcriptions/TranscriptionViewer.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport NotFoundError from '../NotFoundError';\nimport Construction from '../Construction';\nimport AnnotationPane from './AnnotationPane';\n\n//import styles from './TranscriptionViewer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TranscriptionViewer = ({\n  documentData,\n  showAnnotations,\n  showTypos,\n  showAdditions,\n  showDeletions,\n  showPane\n}) => {\n  _s();\n  const {\n    page_id\n  } = useParams();\n  const matchingPage = documentData.find(document => document.id === page_id);\n  const matchingPageUri = matchingPage ? matchingPage.transcription_html_uri : null;\n  const [pageContent, setPageContent] = useState(null);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    if (matchingPage && matchingPageUri) {\n      fetch(matchingPageUri).then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch');\n        }\n        return response.text();\n      }).then(html => {\n        setPageContent(html);\n        setError(false); // Reset error flag if fetch is successful\n      }).catch(error => {\n        setError(true); // Set error flag if an error occurs\n      });\n    } else {\n      setError(false); // Reset error flag if there's no matching page or URI\n    }\n  }, [page_id, matchingPage, matchingPageUri]);\n  if (!matchingPageUri) {\n    return /*#__PURE__*/_jsxDEV(Construction, {\n      page: \"Transcriptions - \" + page_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  } else if (!matchingPage) {\n    return /*#__PURE__*/_jsxDEV(NotFoundError, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  } else if (error) {\n    return /*#__PURE__*/_jsxDEV(NotFoundError, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this); // Render error component if an error occurred during fetch\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: matchingPage.title_full\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: pageContent\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(AnnotationPane, {\n          showAnnotations: showAnnotations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(TranscriptionViewer, \"AEdkDSbhEsc/juBb+43M+UvLlew=\", false, function () {\n  return [useParams];\n});\n_c = TranscriptionViewer;\nexport default TranscriptionViewer;\nvar _c;\n$RefreshReg$(_c, \"TranscriptionViewer\");","map":{"version":3,"names":["useState","useEffect","useParams","Container","Row","Col","NotFoundError","Construction","AnnotationPane","jsxDEV","_jsxDEV","Fragment","_Fragment","TranscriptionViewer","documentData","showAnnotations","showTypos","showAdditions","showDeletions","showPane","_s","page_id","matchingPage","find","document","id","matchingPageUri","transcription_html_uri","pageContent","setPageContent","error","setError","fetch","then","response","ok","Error","text","html","catch","page","fileName","_jsxFileName","lineNumber","columnNumber","children","xs","title_full","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/Users/joshua/Documents/digital-anon-react-test/frontend/src/components/transcriptions/TranscriptionViewer.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport NotFoundError from '../NotFoundError';\nimport Construction from '../Construction';\nimport AnnotationPane from './AnnotationPane';\n\n//import styles from './TranscriptionViewer.module.css';\n\nconst TranscriptionViewer = ({ documentData, showAnnotations, showTypos, showAdditions, showDeletions, showPane }) => {\n  const { page_id } = useParams();\n\n  const matchingPage = documentData.find((document) => document.id === page_id);\n  const matchingPageUri = matchingPage ? matchingPage.transcription_html_uri : null;\n  const [pageContent, setPageContent] = useState(null);\n  const [error, setError] = useState(false);\n\n\n  useEffect(() => {\n    if (matchingPage && matchingPageUri) {\n      fetch(matchingPageUri)\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Failed to fetch');\n          }\n          return response.text();\n        })\n        .then(html => {\n          setPageContent(html);\n          setError(false); // Reset error flag if fetch is successful\n        })\n        .catch(error => {\n          setError(true); // Set error flag if an error occurs\n        });\n    } else {\n      setError(false); // Reset error flag if there's no matching page or URI\n    }\n  }, [page_id, matchingPage, matchingPageUri]);\n\n  if (!matchingPageUri) {\n    return <Construction page={\"Transcriptions - \" + page_id} />;\n  } else if (!matchingPage) {\n    return <NotFoundError />;\n  } else if (error) {\n    return <NotFoundError />; // Render error component if an error occurred during fetch\n  }\n\n  return (\n    <>\n      <Row>\n        <Col xs={8}>\n          <Container>\n          <p>{matchingPage.title_full}</p>\n          <div dangerouslySetInnerHTML={{ __html: pageContent }}></div>\n          </Container>\n        </Col>\n        <Col xs={4}>\n          <AnnotationPane showAnnotations={showAnnotations}/>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default TranscriptionViewer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}